import java.util.Scanner;

/*
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

public class Main {
	public static void main(String[] args) {
		System.out.println("Enter the max number in the fib sequence");
		int maxNumber = new Scanner(System.in).nextInt();

		int first = 1;
		int second = 2;
		int sumOfDoubles = 2;
		System.out.println(" " + String.valueOf(first) + " ");
		System.out.println(" " + String.valueOf(second) + " ");

		int total = countEvenFib(first, second, sumOfDoubles, maxNumber);
		System.out.println("Sum of the normal fib sequence is " + total);

	}

	public static int countEvenFib (int first, int second, int sumOfDoubles, int maxNumber) {
		int sum = first + second;
		if (first + second > maxNumber) {
			return sumOfDoubles;
		}
		else {
			if (sum % 2 == 0) {
				sumOfDoubles += sum;
			}
			System.out.println(" " + String.valueOf(sum) + " ");
			return countEvenFib(second, sum, sumOfDoubles, maxNumber);
		}
	}
}